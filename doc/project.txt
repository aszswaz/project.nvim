*project* A plugin to manage the project's configuration and hook scripts.

Author: aszswaz <aszswaz@163.com>

=============================================================================
CONTENT                                               *project*

    1. Introduction                                   |project-introduction|
    2. Quickstart                                     |project-quickstart|
    3. Commands                                       |project-commands|
    4. Configuraion                                   |project-configuration|

=============================================================================
 1. INTRODUCTION                                      *project-introduction*

Functions:
    1. the user can set neovim options specific to the current project.
    2. manage or execute the hook for the current project.

=============================================================================
 2. QUICKSTART                                        *project-quickstart*

The setup function needs to be called in the lua file, example: >

    -- use the default configuration.
    require("project").setup {}

    -- or customise some of the options.
    require("project").setup {
        shell = vim.o.shell,
        enable_hook = false,
    }
<

For more information on the options see |project-configuration|.

=============================================================================
 3. COMMANDS                                          *project-commands*

*:ProjectOption*
Set or view the neovim options for the current project.
example: ProjectOption filetype text

*:ProjectOpenHook*
Create or open a hook script for the current project.
example: ProjectOpenHook demo.sh

*:ProjectDeleteHook*
Batch delete the hook script for the current project.
example: ProjectDeleteHook demo.sh test.sh

=============================================================================
 4. CONFIGURAION                                      *project-configuration*

The default configuration is as follows: >

    require("project").setup {
        enable_hook = false,
        shell = vim.o.shell,
    }
<

*enable_hook*
Accepts boolean, string or list. When it is boolean, it indicates whether to
execute the hook script for the current project.
*Note:* Setting enable_hook to true directly may cause security problems and
you must ensure that there is no malicious code in the hook script for the
current project.
When it is a string or a list, it means that only items in the specified
directory can execute the hook script, example. >

    -- The current project must be in the "~/Documents" directory
    -- in order for the hook script to be executed.
    enable_hook = "~/Documents"
    -- You can set up multiple directories.
    enable_hook = [ "~/Documents", "/dev/shm" ]
<

*shell*
The shell used to execute the hook script, the default is "vim.o.shell".

vim:tw=78:ts=8:noet:ft=help:norl:
